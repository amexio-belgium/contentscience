---
import { getCollection } from 'astro:content';
import { i18nParams } from '../../../i18n/consts'
import Base from '@layouts/Base.astro';
import HeroHeader from '@components/uicomposition/HeroHeader.astro';
import Link from '@components/uielements/Link.astro';
import FormattedDate from '@components/uielements/FormattedDate.astro';
import { Image } from 'astro:assets';
import { useTranslations } from 'src/i18n/utils';

const { lang } = Astro.params;

const posts = (await getCollection('blog')).sort
(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

export function getStaticPaths() {
  return i18nParams;
}

function getPostLangAndSlug(post) {
	const [lang, ...slug] = post.slug.split('/');
	return {lang, slug}
}
const t = useTranslations(lang, 'blog');

---	
<Base title={t('blog.title')} description={t('blog.seoDescription')}>
    <HeroHeader 
		headline={t('hero.headline')}
		text={t('hero.subheadline')}
	/>

	<div class="mt-20 mb-40">
		{
			posts.map((post, index) => (
				(getPostLangAndSlug(post).lang === lang && index == 0) &&
				<article class="relative flex flex-col md:flex-row w-full  justify-stretch gap-8 has-[:focus-visible]:outline has-[:focus-visible]:outline-offset-4 has-[:focus-visible]:outline-2 has-[:focus-visible]:outline-yellow-500">
					<div class="aspect-square flex items-center justify-center shadow-xl shadow-primary/20 rounded-t-xl md:rounded-tr-none md:rounded-l-xl overflow-hidden">
						<Image loading="eager" src={post.data.heroImage} class="min-w-full min-h-full max-w-[unset] h-[unset] object-cover" loading="lazy" width={512} height={512} alt={post.data.altTextImage || ""} />
					</div> 
					<div class="pb-8 px-8 pt-0 md:p-8 max-h-full w-full flex flex-col justify-between gap-8 border-b-2 md:border-y-2 border-y-white text-white">
						<div class="flex flex-col gap-4">
							<h2 class="mb-2 font-serif text-xl [&>mark]:text-black"><Link class="outline-none hover:text-yellow-500 hover:underline hover:decoration-1 focus-visible:ring-0 content-none before:absolute before:inset-x-0 before:inset-y-0" href={`./${getPostLangAndSlug(post).slug}/`} set:html={post.data.title}></Link></h2>
							<p class="text-base font-light" set:html={post.data.description}></p>
						</div>
						<div class="flex flex-row items-center gap-4">
							<FormattedDate class="font-serif text-base" date={post.data.pubDate} transition:name={post.slug + "_date"} />
							{
								post.data.tags && <p class="font-serif uppercase text-base before:content-['/'] before:font-sans before:mr-4 before:text-secondary">
									{post.data.tags}
								</p>
							}	
						</div>
					</div>
				</article>
			))
		}
	</div>

	<div class="relative grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 pt-20 pb-40 w-full gap-8 before:-z-10 before:bg-light-blue-50 before:absolute before:-left-[3000px] before:top-0 before:bottom-0 before:right-[1000px] marker:before:h-full before:w-[10000px] before:rounded-xl">
		{
			posts.map((post, index) => (
				(getPostLangAndSlug(post).lang === lang && index > 0) &&
				<article class="relative flex flex-col justify-stretch has-[:focus-visible]:outline has-[:focus-visible]:outline-offset-0 has-[:focus-visible]:outline-4 has-[:focus-visible]:outline-blue-500">
					<div class="w-full min-h-[260px] flex items-center justify-center rounded-t-xl overflow-hidden">
						<Image loading="lazy" src={post.data.heroImage} class="min-w-full min-h-full shrink-0 max-w-[unset] h-[unset] object-cover" loading="lazy" width={512} height={512} alt={post.data.altTextImage || ""} />
					</div> 
					<div class="p-8 pt-6 h-full min-w-full flex flex-col gap-2 border-b-2 border-y-quaternary">
						<div class="flex flex-row items-center gap-4">
							<FormattedDate class="font-serif text-base" date={post.data.pubDate} transition:name={post.slug + "_date"} />
							{
								post.data.tags && <p class="font-serif uppercase text-base before:content-['/'] before:font-sans before:mr-4 before:text-secondary">
									{post.data.tags}
								</p>
							}
						</div>
						<h2 class="font-serif mb-2 text-xl [&>mark]:text-black"><Link class="outline-none hover:text-blue-500 hover:underline hover:decoration-1 content-none before:absolute before:inset-x-0 before:inset-y-0" href={`./${getPostLangAndSlug(post).slug}/`} set:html={post.data.title}></Link></h2>
						<p class="text-base font-light" set:html={post.data.description}></p>
					</div>
				</article>
			))
		}
	</div>
</Base>