---
import type { ImageMetadata } from 'astro';

import { Image } from 'astro:assets';

interface Props {
    quote: string;
    name: string;
    jobtitle?: string;
    profileImage: string;
    variant?: 'flat' | 'glass'
    class?: string;
}
const { 
    quote, 
    name, 
    jobtitle,
    profileImage, 
    variant = "glass",
    class: className,
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/people/*.{jpeg,jpg,png,gif}');
if (!images[profileImage]) throw new Error(`"${profileImage}" does not exist in glob: "src/assets/projects/*.{jpeg,jpg,png,gif}"`);
const id = "id_" + Math.random().toString(36).slice(2, 11)

---
<div class:list={[className, "group/quote flex flex-col justify-end gap-8 mb-40 md:flex-row"]}>
    {
        variant == "flat" && 
        <div class="flex flex-col items-center justify-center text-white md:w-4/12 ">
        <Image loading="lazy" class="motion-safe:group-hover/quote:scale-110 transition-transform ease-in-out duration-300  mb-8 rounded-full aspect-square w-52 h-52" src={images[profileImage]()} alt={name} />
        <span set:html={name}></span>
        <span class="text-sm" set:html={jobtitle}></span>
        </div>
    }
    <div class:list={["flex flex-col items-start w-full gap-8 p-12 text-lg lg:w-8/12 rounded-xl ",
     variant == "flat" ? 
        "text-black bg-lightest-blue-500"
        :
        "relative text-white pt-40  bg-gradient-to-r  from-blue-600/70 to-blue-800/70 shadow-blue-200 rounded-2xl border border-blue shadow-sm backdrop-blur-sm ", id]}> 
        {
            variant == "flat" ? 
            <div class="flex items-center justify-center w-20 h-20 p-4 bg-white rounded-full motion-safe:group-hover/quote:scale-125 transition-transform ease-in-out duration-300 delay-200">
                <svg width="40" height="30" aria-hidden="true" focusable="false">
                    <use xlink:href="/icons/icon-sprite.svg#icon-quote"></use>
                </svg>
            </div> 
            :
            <svg class="rotate-180 absolute w-20 h-20 -bottom-8 -right-6"  width="40" height="30" aria-hidden="true" focusable="false">
                <use xlink:href="/icons/icon-sprite.svg#icon-quote"></use>
            </svg>
            <Image loading="lazy" class="motion-safe:group-hover/quote:scale-110 transition-transform ease-in-out duration-300 absolute rounded-full aspect-square left-4 lg:-left-16 -top-16  w-52 h-52" src={images[profileImage]()} alt={name} />
        }
        <span class="font-light" set:html={quote}></span>
        {
            variant == "glass" && 
            <div class="flex flex-col  text-white md:w-4/12 ">
            <span set:html={name}></span>
            <span class="text-sm" set:html={jobtitle}></span>
            </div>
        }
    </div>
</div>

<script define:vars={{id}} is:inline>
    const textBlock = document.querySelector(`.${id}`);
  
    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting && textBlock) {
          textBlock.classList.add('motion-safe:animate-fade-up');
          observer.unobserve(textBlock);
        }
      });
    });
  
    textBlock && observer.observe(textBlock);
</script>