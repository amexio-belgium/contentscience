---
import { getLangFromUrl, useTranslations } from '../../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

interface Props {
  size?: "md" | "lg";
  icon?: boolean;
  style?: "primary" | "secondary";
  color?: "light" | "dark";
  class?: string;
  link?: string;
  [x: string]: any;
}

const {
  size = "md",
  style = "primary",
  color = "dark",
  icon = false,
  class: className,
  link,
  ...rest
} = Astro.props;

const sizes = {
  md: "px-4 py-3.5",
  lg: "px-6 py-3",
};

const styles = {
    primary_dark:
      "bg-tertiary text-black hover:bg-orange-300 border border-transparent focus-visible:ring-tertiary ring-black ring-offset-black",
    primary_light:
      "bg-blue-900 text-white hover:bg-blue-700 border border-transparent  focus-visible:ring-orange ring-white ring-offset-white",
    secondary_dark:
      "bg-transparant text-tertiary border border-white hover:border-tertiary box-border focus-visible:ring-tertiary ring-black ring-offset-black",
    secondary_light:
      "bg-transparant text-black border border-blue-100 hover:border-blue-900  box-border focus-visible:ring-orange ring-white ring-offset-white",
};

const iconFill = {
    primary_dark:
      "fill-black",
    primary_light:
      "fill-white",
    secondary_light:
      "fill-black",
    secondary_dark:
      "fill-tertiary",
};
---

<a
  {...rest}
  class:list={[
    "font-medium inline-flex items-center flex-row gap-2 text-center rounded-full transition focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-2 ring-offset-2",
    sizes[size],
    styles[style + "_" + color],
    className,
  ]}
  href={`/${lang+link}`}
  >

  { icon && 
  <svg class={iconFill[style + "_" + color]} width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M9.00056 13.0147C9.11878 13.0147 9.21769 12.9748 9.29727 12.8949C9.37687 12.8151 9.41667 12.7161 9.41667 12.5981V8.84807C9.41667 8.73002 9.37668 8.63106 9.29671 8.5512C9.21675 8.47134 9.11766 8.43141 8.99944 8.43141C8.88121 8.43141 8.78231 8.47134 8.70273 8.5512C8.62313 8.63106 8.58333 8.73002 8.58333 8.84807V12.5981C8.58333 12.7161 8.62332 12.8151 8.70329 12.8949C8.78325 12.9748 8.88234 13.0147 9.00056 13.0147ZM9 7.24551C9.14531 7.24551 9.2671 7.19636 9.3654 7.09807C9.46367 6.99978 9.51281 6.87798 9.51281 6.73268C9.51281 6.58739 9.46367 6.46559 9.3654 6.3673C9.2671 6.26901 9.14531 6.21987 9 6.21987C8.85469 6.21987 8.7329 6.26901 8.6346 6.3673C8.53633 6.46559 8.48719 6.58739 8.48719 6.73268C8.48719 6.87798 8.53633 6.99978 8.6346 7.09807C8.7329 7.19636 8.85469 7.24551 9 7.24551ZM9.00279 16.7647C7.96567 16.7647 6.9906 16.5679 6.07758 16.1743C5.16457 15.7807 4.37037 15.2466 3.69498 14.5718C3.0196 13.8971 2.48493 13.1036 2.09096 12.1914C1.69699 11.2793 1.5 10.3046 1.5 9.26753C1.5 8.23041 1.6968 7.25534 2.0904 6.34232C2.48401 5.42931 3.01819 4.63511 3.69294 3.95972C4.36769 3.28434 5.16114 2.74967 6.07329 2.3557C6.98546 1.96173 7.9601 1.76474 8.99721 1.76474C10.0343 1.76474 11.0094 1.96154 11.9224 2.35514C12.8354 2.74875 13.6296 3.28293 14.305 3.95768C14.9804 4.63243 15.5151 5.42588 15.909 6.33803C16.303 7.2502 16.5 8.22484 16.5 9.26195C16.5 10.2991 16.3032 11.2741 15.9096 12.1872C15.516 13.1002 14.9818 13.8944 14.3071 14.5698C13.6323 15.2451 12.8389 15.7798 11.9267 16.1738C11.0145 16.5678 10.0399 16.7647 9.00279 16.7647ZM9 15.9314C10.8611 15.9314 12.4375 15.2856 13.7292 13.9939C15.0208 12.7022 15.6667 11.1259 15.6667 9.26474C15.6667 7.40363 15.0208 5.82724 13.7292 4.53557C12.4375 3.24391 10.8611 2.59807 9 2.59807C7.13889 2.59807 5.5625 3.24391 4.27083 4.53557C2.97917 5.82724 2.33333 7.40363 2.33333 9.26474C2.33333 11.1259 2.97917 12.7022 4.27083 13.9939C5.5625 15.2856 7.13889 15.9314 9 15.9314Z"/>
  </svg> }
  <slot />
</a>