---
import { useTranslations } from 'src/i18n/utils';
import { Picture, Image } from 'astro:assets';
import Button from '@components/uielements/Button.astro';

const { lang } = Astro.params;

const { 
    caseData,
    small,
    link
} = Astro.props;

const t = useTranslations(lang, 'work');

let caseImage

if (caseData.heroImage.includes("/projects/")) {
    const projectImages = import.meta.glob<{ default: ImageMetadata }>('/src/assets/projects/*.{jpeg,jpg,png,gif}');
    if (!projectImages[caseData.heroImage]) throw new Error(`"${caseData.heroImage}" does not exist in glob: "src/assets/images/*.{jpeg,jpg,png,gif}" or "src/assets/projects/*.{jpeg,jpg,png,gif}"`);
    caseImage = projectImages[caseData.heroImage]()
} else {
    const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/*.{jpeg,jpg,png,gif}');
    if (!images[caseData.heroImage]) throw new Error(`"${caseData.heroImage}" does not exist in glob: "src/assets/images/*.{jpeg,jpg,png,gif}" or "src/assets/projects/*.{jpeg,jpg,png,gif}"`);
    caseImage = images[caseData.heroImage]()
}

const logoimages = import.meta.glob<{ default: ImageMetadata }>('/src/assets/logos/*.{jpeg,jpg,png,gif}');
if (!logoimages[caseData.logo]) throw new Error(`"${caseData.logo}" does not exist in glob: "src/assets/logos/*.{jpeg,jpg,png,gif}"`);

---
<div class:list={["motion-safe:animate-fade-up motion-safe:animate-delay-1000 group flex flex-col justify-stretch gap-8",
   small ? "items-stretch" : "w-full md:flex-row" 
]}>
    <div class:list={["w-full flex items-center justify-center rounded-t-xl  overflow-hidden",
     small ? "max-h-[400px]" : "md:w-1/2 md:rounded-tr-none md:rounded-l-xl" 
    ]}>
        <Picture
            src={caseImage} 
            alt={caseData.altTextImage || ""}
            widths={[400, 600, 790]}
            sizes="(max-width: 790px) 100vw, 790px"
            class="motion-safe:group-hover:scale-105 transition-transform ease-in-out duration-300 min-w-full min-h-full shrink-0 max-w-[unset] h-[unset] w-auto" 
            loading="lazy"
        />
    </div> 
    <div class:list={["pb-8 max-h-full w-full flex flex-col justify-between gap-8 border-b-2 border-y-quaternary",
    small ? "h-3/4 lg:px-4" : "px-4 md:w-1/2 md:p-8 md:border-y-2" 
    ]}>
        <div class="flex flex-col gap-2">
            <div class="flex flex-row mb-4 gap-8 items-start justify-between">
                <div class="flex flex-col">
                    <span class="font-serif text-primary" set:html={caseData.client}></span>
                    <h2 class="caseheadline mb-2 font-serif text-xl [&>mark]:text-black [&>mark]:bg-none [&>mark]:bg-clip-border" set:html={caseData.title}></h2>
                </div>
                {								
                    caseData.logo && 
                        <Image loading="lazy" src={logoimages[caseData.logo]()}  class="w-auto h-12 sm:h-16 md:h-12 xl:h-16 shrink-0" loading="lazy" width={120} height={60} alt={caseData.client || caseData.title}/>
                }
            </div>
            <p class="text-base font-light" set:html={caseData.description}></p>
            <ol class="list-disc font-light list-inside">
                {
                    caseData.duration && <li class="">
                        {t('metadata.duration') + ": " + caseData.duration} 
                    </li>
                } 
                {
                    caseData.collaboration && <li class="">
                        {t('metadata.collaboration') + ": " + caseData.collaboration}
                    </li>
                }
                {
                    caseData.technologies && <li class="">
                        {t('metadata.technologies') + ": " + caseData.technologies} 
                    </li>
                }
                {
                    caseData.services && <li class="">
                        {t('metadata.services') + ": " + caseData.services} 
                    </li>
                }
            </ol>
        </div>
        <Button class="self-end" link={link} style="primary" size="sm" color="light">
            {t('overview.cta')}
        </Button>
    </div>
</div>