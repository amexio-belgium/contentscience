---
import { getLangFromUrl, useTranslations } from '../../i18n/utils';

const paths = Astro.url.pathname.split('/').filter(x => x);
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

let parts = [
  {
    text: t('breadcrumb.home'),
    href: '/',
  }
];

paths.forEach((text, i) => {
  const href = `/${paths.slice(0, i + 1).join('/')}`;
  if (i !== 0) {
    const translatedText = t('nav.' + text.replace(/[-_]/g, ' '))
    parts.push({ text: translatedText || text.replace(/[-_]/g, ' '), href })
  }
})

---

{ parts.length > 1 &&
    <nav aria-label={t('breadcrumb.label')}>
        <ol class="flex text-white gap-2 -ms-2" role="list">
            {parts.map(({ text, ...attrs }, index) => (
                <li class="text-regular flex items-center gap-2" role="listitem">
                    <a {...attrs} class="capitalize outline-none py-2 px-2 transition-colors  motion-reduce:transition-none hover:text-yellow-500 hover:underline hover:decoration-1 focus-visible:outline focus-visible:outline-offset-4 focus-visible:outline-2 focus-visible:outline-yellow-500">{text}</a> 
                    { index !== parts.length - 1 && 
                    <svg class="w-3 h-3 fill-current" width="12" height="12" aria-hidden="true" focusable="false"><use xlink:href="/icons/icon-sprite.svg#icon-chevron-right"></use></svg>
                    }
                </li>
            ))}
        </ol>
    </nav>
}